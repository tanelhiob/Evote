@page "/"
@page "/campaigns"
@using  Models
@inject HttpClient HttpClient

@if (_campaigns == null)
{
    <div>loading...</div>
}
else
{
    <table class="table table-dark">
        <thead>
            <tr>
                <th>Name</th>
                <th>Started</th>
                <th>Expires</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var campaign in _campaigns.OrderBy(c => c.Start))
            {
                var isStarted = campaign.Start >= DateTimeOffset.UtcNow;

                <tr>
                    <td><NavLink href="@($"campaign/{campaign.Id}")">@campaign.Name</NavLink></td>
                    <td>@(isStarted ? "yes" : "no")</td>
                    <td>@(campaign.End.ToLocalTime().ToString("dddd, dd MMMM HH:mm:ss"))</td>
                </tr>
            }
        </tbody>
    </table>
}

@functions {

    private IList<Models.Campaign> _campaigns;

    protected override async Task OnInitAsync()
    {
        _campaigns = await HttpClient.GetJsonAsync<List<Models.Campaign>>("http://localhost:7071/api/GetCampaigns");
    }
}